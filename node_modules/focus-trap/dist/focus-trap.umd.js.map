{"version":3,"file":"focus-trap.umd.js","sources":["../index.js"],"sourcesContent":["import { tabbable, isFocusable, isTabbable } from 'tabbable';\n\nconst activeFocusTraps = (function () {\n  const trapQueue = [];\n  return {\n    activateTrap(trap) {\n      if (trapQueue.length > 0) {\n        const activeTrap = trapQueue[trapQueue.length - 1];\n        if (activeTrap !== trap) {\n          activeTrap.pause();\n        }\n      }\n\n      const trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex === -1) {\n        trapQueue.push(trap);\n      } else {\n        // move this existing trap to the front of the queue\n        trapQueue.splice(trapIndex, 1);\n        trapQueue.push(trap);\n      }\n    },\n\n    deactivateTrap(trap) {\n      const trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex !== -1) {\n        trapQueue.splice(trapIndex, 1);\n      }\n\n      if (trapQueue.length > 0) {\n        trapQueue[trapQueue.length - 1].unpause();\n      }\n    },\n  };\n})();\n\nconst isSelectableInput = function (node) {\n  return (\n    node.tagName &&\n    node.tagName.toLowerCase() === 'input' &&\n    typeof node.select === 'function'\n  );\n};\n\nconst isEscapeEvent = function (e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n};\n\nconst isTabEvent = function (e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n};\n\nconst delay = function (fn) {\n  return setTimeout(fn, 0);\n};\n\n// Array.find/findIndex() are not supported on IE; this replicates enough\n//  of Array.findIndex() for our needs\nconst findIndex = function (arr, fn) {\n  let idx = -1;\n\n  arr.every(function (value, i) {\n    if (fn(value)) {\n      idx = i;\n      return false; // break\n    }\n\n    return true; // next\n  });\n\n  return idx;\n};\n\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\nconst valueOrHandler = function (value, ...params) {\n  return typeof value === 'function' ? value(...params) : value;\n};\n\nconst getActualTarget = function (event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function'\n    ? event.composedPath()[0]\n    : event.target;\n};\n\nconst createFocusTrap = function (elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  const doc = userOptions?.document || document;\n\n  const config = {\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    ...userOptions,\n  };\n\n  const state = {\n    // @type {Array<HTMLElement>}\n    containers: [],\n\n    // list of objects identifying the first and last tabbable nodes in all containers/groups in\n    //  the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{ container: HTMLElement, firstTabbableNode: HTMLElement|null, lastTabbableNode: HTMLElement|null }>}\n    tabbableGroups: [],\n\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined,\n  };\n\n  let trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  const getOption = (configOverrideOptions, optionName, configOptionName) => {\n    return configOverrideOptions &&\n      configOverrideOptions[optionName] !== undefined\n      ? configOverrideOptions[optionName]\n      : config[configOptionName || optionName];\n  };\n\n  const containersContain = function (element) {\n    return !!(\n      element &&\n      state.containers.some((container) => container.contains(element))\n    );\n  };\n\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @returns {undefined | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `false` if the option\n   *  resolved to `false` (node explicitly not given); otherwise, the resolved\n   *  DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node.\n   */\n  const getNodeForOption = function (optionName, ...params) {\n    let optionValue = config[optionName];\n\n    if (typeof optionValue === 'function') {\n      optionValue = optionValue(...params);\n    }\n\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      }\n      // else, empty string (invalid), null (invalid), 0 (invalid)\n\n      throw new Error(\n        `\\`${optionName}\\` was specified but was not a node, or did not return a node`\n      );\n    }\n\n    let node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue); // resolve to node, or null if fails\n      if (!node) {\n        throw new Error(\n          `\\`${optionName}\\` as selector refers to no known node`\n        );\n      }\n    }\n\n    return node;\n  };\n\n  const getInitialFocusNode = function () {\n    let node = getNodeForOption('initialFocus');\n\n    // false explicitly indicates we want no initialFocus at all\n    if (node === false) {\n      return false;\n    }\n\n    if (node === undefined) {\n      // option not specified: use fallback options\n      if (containersContain(doc.activeElement)) {\n        node = doc.activeElement;\n      } else {\n        const firstTabbableGroup = state.tabbableGroups[0];\n        const firstTabbableNode =\n          firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n\n        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    }\n\n    if (!node) {\n      throw new Error(\n        'Your focus-trap needs to have at least one focusable element'\n      );\n    }\n\n    return node;\n  };\n\n  const updateTabbableNodes = function () {\n    state.tabbableGroups = state.containers\n      .map((container) => {\n        const tabbableNodes = tabbable(container);\n\n        if (tabbableNodes.length > 0) {\n          return {\n            container,\n            firstTabbableNode: tabbableNodes[0],\n            lastTabbableNode: tabbableNodes[tabbableNodes.length - 1],\n          };\n        }\n\n        return undefined;\n      })\n      .filter((group) => !!group); // remove groups with no tabbable nodes\n\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n    if (\n      state.tabbableGroups.length <= 0 &&\n      !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error(\n        'Your focus-trap must have at least one container with at least one tabbable node in it at all times'\n      );\n    }\n  };\n\n  const tryFocus = function (node) {\n    if (node === false) {\n      return;\n    }\n\n    if (node === doc.activeElement) {\n      return;\n    }\n\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus({ preventScroll: !!config.preventScroll });\n    state.mostRecentlyFocusedNode = node;\n\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n\n  const getReturnFocusNode = function (previousActiveElement) {\n    const node = getNodeForOption('setReturnFocus', previousActiveElement);\n    return node ? node : node === false ? false : previousActiveElement;\n  };\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  const checkPointerDown = function (e) {\n    const target = getActualTarget(e);\n\n    if (containersContain(target)) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // if, on deactivation, we should return focus to the node originally-focused\n        //  when the trap was activated (or the configured `setReturnFocus` node),\n        //  then assume it's also OK to return focus to the outside node that was\n        //  just clicked, causing deactivation, as long as that node is focusable;\n        //  if it isn't focusable, then return focus to the original node focused\n        //  on activation (or the configured `setReturnFocus` node)\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked, whether it's focusable or not; by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node)\n        returnFocus: config.returnFocusOnDeactivate && !isFocusable(target),\n      });\n      return;\n    }\n\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    }\n\n    // otherwise, prevent the click\n    e.preventDefault();\n  };\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  const checkFocusIn = function (e) {\n    const target = getActualTarget(e);\n    const targetContained = containersContain(target);\n\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      e.stopImmediatePropagation();\n      tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n    }\n  };\n\n  // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  const checkTab = function (e) {\n    const target = getActualTarget(e);\n    updateTabbableNodes();\n\n    let destinationNode = null;\n\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      const containerIndex = findIndex(state.tabbableGroups, ({ container }) =>\n        container.contains(target)\n      );\n\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back in to...\n        if (e.shiftKey) {\n          // ...the last node in the last group\n          destinationNode =\n            state.tabbableGroups[state.tabbableGroups.length - 1]\n              .lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (e.shiftKey) {\n        // REVERSE\n\n        // is the target the first tabbable node in a group?\n        let startOfGroupIndex = findIndex(\n          state.tabbableGroups,\n          ({ firstTabbableNode }) => target === firstTabbableNode\n        );\n\n        if (\n          startOfGroupIndex < 0 &&\n          (state.tabbableGroups[containerIndex].container === target ||\n            (isFocusable(target) && !isTabbable(target)))\n        ) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus), in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          const destinationGroupIndex =\n            startOfGroupIndex === 0\n              ? state.tabbableGroups.length - 1\n              : startOfGroupIndex - 1;\n\n          const destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = destinationGroup.lastTabbableNode;\n        }\n      } else {\n        // FORWARD\n\n        // is the target the last tabbable node in a group?\n        let lastOfGroupIndex = findIndex(\n          state.tabbableGroups,\n          ({ lastTabbableNode }) => target === lastTabbableNode\n        );\n\n        if (\n          lastOfGroupIndex < 0 &&\n          (state.tabbableGroups[containerIndex].container === target ||\n            (isFocusable(target) && !isTabbable(target)))\n        ) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus), in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          const destinationGroupIndex =\n            lastOfGroupIndex === state.tabbableGroups.length - 1\n              ? 0\n              : lastOfGroupIndex + 1;\n\n          const destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = destinationGroup.firstTabbableNode;\n        }\n      }\n    } else {\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n\n    if (destinationNode) {\n      e.preventDefault();\n      tryFocus(destinationNode);\n    }\n    // else, let the browser take care of [shift+]tab and move the focus\n  };\n\n  const checkKey = function (e) {\n    if (\n      isEscapeEvent(e) &&\n      valueOrHandler(config.escapeDeactivates, e) !== false\n    ) {\n      e.preventDefault();\n      trap.deactivate();\n      return;\n    }\n\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  };\n\n  const checkClick = function (e) {\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n\n    const target = getActualTarget(e);\n\n    if (containersContain(target)) {\n      return;\n    }\n\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  //\n  // EVENT LISTENERS\n  //\n\n  const addListeners = function () {\n    if (!state.active) {\n      return;\n    }\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    state.delayInitialFocusTimer = config.delayInitialFocus\n      ? delay(function () {\n          tryFocus(getInitialFocusNode());\n        })\n      : tryFocus(getInitialFocusNode());\n\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('keydown', checkKey, {\n      capture: true,\n      passive: false,\n    });\n\n    return trap;\n  };\n\n  const removeListeners = function () {\n    if (!state.active) {\n      return;\n    }\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n\n    return trap;\n  };\n\n  //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n\n      const onActivate = getOption(activateOptions, 'onActivate');\n      const onPostActivate = getOption(activateOptions, 'onPostActivate');\n      const checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n\n      if (onActivate) {\n        onActivate();\n      }\n\n      const finishActivation = () => {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        if (onPostActivate) {\n          onPostActivate();\n        }\n      };\n\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(\n          finishActivation,\n          finishActivation\n        );\n        return this;\n      }\n\n      finishActivation();\n      return this;\n    },\n\n    deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n      state.delayInitialFocusTimer = undefined;\n\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n\n      activeFocusTraps.deactivateTrap(trap);\n\n      const onDeactivate = getOption(deactivateOptions, 'onDeactivate');\n      const onPostDeactivate = getOption(deactivateOptions, 'onPostDeactivate');\n      const checkCanReturnFocus = getOption(\n        deactivateOptions,\n        'checkCanReturnFocus'\n      );\n\n      if (onDeactivate) {\n        onDeactivate();\n      }\n\n      const returnFocus = getOption(\n        deactivateOptions,\n        'returnFocus',\n        'returnFocusOnDeactivate'\n      );\n\n      const finishDeactivation = () => {\n        delay(() => {\n          if (returnFocus) {\n            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          if (onPostDeactivate) {\n            onPostDeactivate();\n          }\n        });\n      };\n\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(\n          getReturnFocusNode(state.nodeFocusedBeforeActivation)\n        ).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n\n      finishDeactivation();\n      return this;\n    },\n\n    pause() {\n      if (state.paused || !state.active) {\n        return this;\n      }\n\n      state.paused = true;\n      removeListeners();\n\n      return this;\n    },\n\n    unpause() {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n\n      state.paused = false;\n      updateTabbableNodes();\n      addListeners();\n\n      return this;\n    },\n\n    updateContainerElements(containerElements) {\n      const elementsAsArray = [].concat(containerElements).filter(Boolean);\n\n      state.containers = elementsAsArray.map((element) =>\n        typeof element === 'string' ? doc.querySelector(element) : element\n      );\n\n      if (state.active) {\n        updateTabbableNodes();\n      }\n\n      return this;\n    },\n  };\n\n  // initialize container elements\n  trap.updateContainerElements(elements);\n\n  return trap;\n};\n\nexport { createFocusTrap };\n"],"names":["activeFocusTraps","trapQueue","activateTrap","trap","length","activeTrap","pause","trapIndex","indexOf","push","splice","deactivateTrap","unpause","isSelectableInput","node","tagName","toLowerCase","select","isEscapeEvent","e","key","keyCode","isTabEvent","delay","fn","setTimeout","findIndex","arr","idx","every","value","i","valueOrHandler","params","getActualTarget","event","target","shadowRoot","composedPath","createFocusTrap","elements","userOptions","doc","document","config","returnFocusOnDeactivate","escapeDeactivates","delayInitialFocus","state","containers","tabbableGroups","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","active","paused","delayInitialFocusTimer","undefined","getOption","configOverrideOptions","optionName","configOptionName","containersContain","element","some","container","contains","getNodeForOption","optionValue","Error","querySelector","getInitialFocusNode","activeElement","firstTabbableGroup","firstTabbableNode","updateTabbableNodes","map","tabbableNodes","tabbable","lastTabbableNode","filter","group","tryFocus","focus","preventScroll","getReturnFocusNode","previousActiveElement","checkPointerDown","clickOutsideDeactivates","deactivate","returnFocus","isFocusable","allowOutsideClick","preventDefault","checkFocusIn","targetContained","Document","stopImmediatePropagation","checkTab","destinationNode","containerIndex","shiftKey","startOfGroupIndex","isTabbable","destinationGroupIndex","destinationGroup","lastOfGroupIndex","checkKey","checkClick","addListeners","addEventListener","capture","passive","removeListeners","removeEventListener","activate","activateOptions","onActivate","onPostActivate","checkCanFocusTrap","finishActivation","concat","then","deactivateOptions","clearTimeout","onDeactivate","onPostDeactivate","checkCanReturnFocus","finishDeactivation","updateContainerElements","containerElements","elementsAsArray","Boolean"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAEA,IAAMA,gBAAgB,GAAI,YAAY;EACpC,MAAMC,SAAS,GAAG,EAAlB;EACA,SAAO;EACLC,IAAAA,YADK,wBACQC,IADR,EACc;EACjB,UAAIF,SAAS,CAACG,MAAV,GAAmB,CAAvB,EAA0B;EACxB,YAAMC,UAAU,GAAGJ,SAAS,CAACA,SAAS,CAACG,MAAV,GAAmB,CAApB,CAA5B;;EACA,YAAIC,UAAU,KAAKF,IAAnB,EAAyB;EACvBE,UAAAA,UAAU,CAACC,KAAX;EACD;EACF;;EAED,UAAMC,SAAS,GAAGN,SAAS,CAACO,OAAV,CAAkBL,IAAlB,CAAlB;;EACA,UAAII,SAAS,KAAK,CAAC,CAAnB,EAAsB;EACpBN,QAAAA,SAAS,CAACQ,IAAV,CAAeN,IAAf;EACD,OAFD,MAEO;EACL;EACAF,QAAAA,SAAS,CAACS,MAAV,CAAiBH,SAAjB,EAA4B,CAA5B;EACAN,QAAAA,SAAS,CAACQ,IAAV,CAAeN,IAAf;EACD;EACF,KAjBI;EAmBLQ,IAAAA,cAnBK,0BAmBUR,IAnBV,EAmBgB;EACnB,UAAMI,SAAS,GAAGN,SAAS,CAACO,OAAV,CAAkBL,IAAlB,CAAlB;;EACA,UAAII,SAAS,KAAK,CAAC,CAAnB,EAAsB;EACpBN,QAAAA,SAAS,CAACS,MAAV,CAAiBH,SAAjB,EAA4B,CAA5B;EACD;;EAED,UAAIN,SAAS,CAACG,MAAV,GAAmB,CAAvB,EAA0B;EACxBH,QAAAA,SAAS,CAACA,SAAS,CAACG,MAAV,GAAmB,CAApB,CAAT,CAAgCQ,OAAhC;EACD;EACF;EA5BI,GAAP;EA8BD,CAhCwB,EAAzB;;EAkCA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAUC,IAAV,EAAgB;EACxC,SACEA,IAAI,CAACC,OAAL,IACAD,IAAI,CAACC,OAAL,CAAaC,WAAb,OAA+B,OAD/B,IAEA,OAAOF,IAAI,CAACG,MAAZ,KAAuB,UAHzB;EAKD,CAND;;EAQA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAUC,CAAV,EAAa;EACjC,SAAOA,CAAC,CAACC,GAAF,KAAU,QAAV,IAAsBD,CAAC,CAACC,GAAF,KAAU,KAAhC,IAAyCD,CAAC,CAACE,OAAF,KAAc,EAA9D;EACD,CAFD;;EAIA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAUH,CAAV,EAAa;EAC9B,SAAOA,CAAC,CAACC,GAAF,KAAU,KAAV,IAAmBD,CAAC,CAACE,OAAF,KAAc,CAAxC;EACD,CAFD;;EAIA,IAAME,KAAK,GAAG,SAARA,KAAQ,CAAUC,EAAV,EAAc;EAC1B,SAAOC,UAAU,CAACD,EAAD,EAAK,CAAL,CAAjB;EACD,CAFD;EAKA;;;EACA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAAUC,GAAV,EAAeH,EAAf,EAAmB;EACnC,MAAII,GAAG,GAAG,CAAC,CAAX;EAEAD,EAAAA,GAAG,CAACE,KAAJ,CAAU,UAAUC,KAAV,EAAiBC,CAAjB,EAAoB;EAC5B,QAAIP,EAAE,CAACM,KAAD,CAAN,EAAe;EACbF,MAAAA,GAAG,GAAGG,CAAN;EACA,aAAO,KAAP,CAFa;EAGd;;EAED,WAAO,IAAP,CAN4B;EAO7B,GAPD;EASA,SAAOH,GAAP;EACD,CAbD;EAeA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAAUF,KAAV,EAA4B;EAAA,oCAARG,MAAQ;EAARA,IAAAA,MAAQ;EAAA;;EACjD,SAAO,OAAOH,KAAP,KAAiB,UAAjB,GAA8BA,KAAK,MAAL,SAASG,MAAT,CAA9B,GAAiDH,KAAxD;EACD,CAFD;;EAIA,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAAUC,KAAV,EAAiB;EACvC;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAAOA,KAAK,CAACC,MAAN,CAAaC,UAAb,IAA2B,OAAOF,KAAK,CAACG,YAAb,KAA8B,UAAzD,GACHH,KAAK,CAACG,YAAN,GAAqB,CAArB,CADG,GAEHH,KAAK,CAACC,MAFV;EAGD,CAXD;;MAaMG,eAAe,GAAG,SAAlBA,eAAkB,CAAUC,QAAV,EAAoBC,WAApB,EAAiC;EACvD;EACA;EACA,MAAMC,GAAG,GAAG,CAAAD,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEE,QAAb,KAAyBA,QAArC;;EAEA,MAAMC,MAAM;EACVC,IAAAA,uBAAuB,EAAE,IADf;EAEVC,IAAAA,iBAAiB,EAAE,IAFT;EAGVC,IAAAA,iBAAiB,EAAE;EAHT,KAIPN,WAJO,CAAZ;;EAOA,MAAMO,KAAK,GAAG;EACZ;EACAC,IAAAA,UAAU,EAAE,EAFA;EAIZ;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAAA,cAAc,EAAE,EAXJ;EAaZC,IAAAA,2BAA2B,EAAE,IAbjB;EAcZC,IAAAA,uBAAuB,EAAE,IAdb;EAeZC,IAAAA,MAAM,EAAE,KAfI;EAgBZC,IAAAA,MAAM,EAAE,KAhBI;EAkBZ;EACA;EACAC,IAAAA,sBAAsB,EAAEC;EApBZ,GAAd;EAuBA,MAAIrD,IAAJ,CAnCuD;;EAqCvD,MAAMsD,SAAS,GAAG,SAAZA,SAAY,CAACC,qBAAD,EAAwBC,UAAxB,EAAoCC,gBAApC,EAAyD;EACzE,WAAOF,qBAAqB,IAC1BA,qBAAqB,CAACC,UAAD,CAArB,KAAsCH,SADjC,GAEHE,qBAAqB,CAACC,UAAD,CAFlB,GAGHf,MAAM,CAACgB,gBAAgB,IAAID,UAArB,CAHV;EAID,GALD;;EAOA,MAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAAUC,OAAV,EAAmB;EAC3C,WAAO,CAAC,EACNA,OAAO,IACPd,KAAK,CAACC,UAAN,CAAiBc,IAAjB,CAAsB,UAACC,SAAD;EAAA,aAAeA,SAAS,CAACC,QAAV,CAAmBH,OAAnB,CAAf;EAAA,KAAtB,CAFM,CAAR;EAID,GALD;EAOA;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACE,MAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAUP,UAAV,EAAiC;EACxD,QAAIQ,WAAW,GAAGvB,MAAM,CAACe,UAAD,CAAxB;;EAEA,QAAI,OAAOQ,WAAP,KAAuB,UAA3B,EAAuC;EAAA,yCAHSlC,MAGT;EAHSA,QAAAA,MAGT;EAAA;;EACrCkC,MAAAA,WAAW,GAAGA,WAAW,MAAX,SAAelC,MAAf,CAAd;EACD;;EAED,QAAI,CAACkC,WAAL,EAAkB;EAChB,UAAIA,WAAW,KAAKX,SAAhB,IAA6BW,WAAW,KAAK,KAAjD,EAAwD;EACtD,eAAOA,WAAP;EACD,OAHe;;;EAMhB,YAAM,IAAIC,KAAJ,YACCT,UADD,kEAAN;EAGD;;EAED,QAAI7C,IAAI,GAAGqD,WAAX,CAlBwD;;EAoBxD,QAAI,OAAOA,WAAP,KAAuB,QAA3B,EAAqC;EACnCrD,MAAAA,IAAI,GAAG4B,GAAG,CAAC2B,aAAJ,CAAkBF,WAAlB,CAAP,CADmC;;EAEnC,UAAI,CAACrD,IAAL,EAAW;EACT,cAAM,IAAIsD,KAAJ,YACCT,UADD,2CAAN;EAGD;EACF;;EAED,WAAO7C,IAAP;EACD,GA9BD;;EAgCA,MAAMwD,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAY;EACtC,QAAIxD,IAAI,GAAGoD,gBAAgB,CAAC,cAAD,CAA3B,CADsC;;EAItC,QAAIpD,IAAI,KAAK,KAAb,EAAoB;EAClB,aAAO,KAAP;EACD;;EAED,QAAIA,IAAI,KAAK0C,SAAb,EAAwB;EACtB;EACA,UAAIK,iBAAiB,CAACnB,GAAG,CAAC6B,aAAL,CAArB,EAA0C;EACxCzD,QAAAA,IAAI,GAAG4B,GAAG,CAAC6B,aAAX;EACD,OAFD,MAEO;EACL,YAAMC,kBAAkB,GAAGxB,KAAK,CAACE,cAAN,CAAqB,CAArB,CAA3B;EACA,YAAMuB,iBAAiB,GACrBD,kBAAkB,IAAIA,kBAAkB,CAACC,iBAD3C,CAFK;;EAML3D,QAAAA,IAAI,GAAG2D,iBAAiB,IAAIP,gBAAgB,CAAC,eAAD,CAA5C;EACD;EACF;;EAED,QAAI,CAACpD,IAAL,EAAW;EACT,YAAM,IAAIsD,KAAJ,CACJ,8DADI,CAAN;EAGD;;EAED,WAAOtD,IAAP;EACD,GA7BD;;EA+BA,MAAM4D,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAY;EACtC1B,IAAAA,KAAK,CAACE,cAAN,GAAuBF,KAAK,CAACC,UAAN,CACpB0B,GADoB,CAChB,UAACX,SAAD,EAAe;EAClB,UAAMY,aAAa,GAAGC,iBAAQ,CAACb,SAAD,CAA9B;;EAEA,UAAIY,aAAa,CAACxE,MAAd,GAAuB,CAA3B,EAA8B;EAC5B,eAAO;EACL4D,UAAAA,SAAS,EAATA,SADK;EAELS,UAAAA,iBAAiB,EAAEG,aAAa,CAAC,CAAD,CAF3B;EAGLE,UAAAA,gBAAgB,EAAEF,aAAa,CAACA,aAAa,CAACxE,MAAd,GAAuB,CAAxB;EAH1B,SAAP;EAKD;;EAED,aAAOoD,SAAP;EACD,KAboB,EAcpBuB,MAdoB,CAcb,UAACC,KAAD;EAAA,aAAW,CAAC,CAACA,KAAb;EAAA,KAda,CAAvB,CADsC;EAiBtC;;EACA,QACEhC,KAAK,CAACE,cAAN,CAAqB9C,MAArB,IAA+B,CAA/B,IACA,CAAC8D,gBAAgB,CAAC,eAAD,CAFnB;EAAA,MAGE;EACA,YAAM,IAAIE,KAAJ,CACJ,qGADI,CAAN;EAGD;EACF,GA1BD;;EA4BA,MAAMa,QAAQ,GAAG,SAAXA,QAAW,CAAUnE,IAAV,EAAgB;EAC/B,QAAIA,IAAI,KAAK,KAAb,EAAoB;EAClB;EACD;;EAED,QAAIA,IAAI,KAAK4B,GAAG,CAAC6B,aAAjB,EAAgC;EAC9B;EACD;;EAED,QAAI,CAACzD,IAAD,IAAS,CAACA,IAAI,CAACoE,KAAnB,EAA0B;EACxBD,MAAAA,QAAQ,CAACX,mBAAmB,EAApB,CAAR;EACA;EACD;;EAEDxD,IAAAA,IAAI,CAACoE,KAAL,CAAW;EAAEC,MAAAA,aAAa,EAAE,CAAC,CAACvC,MAAM,CAACuC;EAA1B,KAAX;EACAnC,IAAAA,KAAK,CAACI,uBAAN,GAAgCtC,IAAhC;;EAEA,QAAID,iBAAiB,CAACC,IAAD,CAArB,EAA6B;EAC3BA,MAAAA,IAAI,CAACG,MAAL;EACD;EACF,GApBD;;EAsBA,MAAMmE,kBAAkB,GAAG,SAArBA,kBAAqB,CAAUC,qBAAV,EAAiC;EAC1D,QAAMvE,IAAI,GAAGoD,gBAAgB,CAAC,gBAAD,EAAmBmB,qBAAnB,CAA7B;EACA,WAAOvE,IAAI,GAAGA,IAAH,GAAUA,IAAI,KAAK,KAAT,GAAiB,KAAjB,GAAyBuE,qBAA9C;EACD,GAHD,CAjLuD;EAuLvD;;;EACA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAUnE,CAAV,EAAa;EACpC,QAAMiB,MAAM,GAAGF,eAAe,CAACf,CAAD,CAA9B;;EAEA,QAAI0C,iBAAiB,CAACzB,MAAD,CAArB,EAA+B;EAC7B;EACA;EACD;;EAED,QAAIJ,cAAc,CAACY,MAAM,CAAC2C,uBAAR,EAAiCpE,CAAjC,CAAlB,EAAuD;EACrD;EACAhB,MAAAA,IAAI,CAACqF,UAAL,CAAgB;EACd;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAAA,WAAW,EAAE7C,MAAM,CAACC,uBAAP,IAAkC,CAAC6C,oBAAW,CAACtD,MAAD;EAZ7C,OAAhB;EAcA;EACD,KAzBmC;EA4BpC;EACA;;;EACA,QAAIJ,cAAc,CAACY,MAAM,CAAC+C,iBAAR,EAA2BxE,CAA3B,CAAlB,EAAiD;EAC/C;EACA;EACD,KAjCmC;;;EAoCpCA,IAAAA,CAAC,CAACyE,cAAF;EACD,GArCD,CAxLuD;;;EAgOvD,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAU1E,CAAV,EAAa;EAChC,QAAMiB,MAAM,GAAGF,eAAe,CAACf,CAAD,CAA9B;EACA,QAAM2E,eAAe,GAAGjC,iBAAiB,CAACzB,MAAD,CAAzC,CAFgC;;EAKhC,QAAI0D,eAAe,IAAI1D,MAAM,YAAY2D,QAAzC,EAAmD;EACjD,UAAID,eAAJ,EAAqB;EACnB9C,QAAAA,KAAK,CAACI,uBAAN,GAAgChB,MAAhC;EACD;EACF,KAJD,MAIO;EACL;EACAjB,MAAAA,CAAC,CAAC6E,wBAAF;EACAf,MAAAA,QAAQ,CAACjC,KAAK,CAACI,uBAAN,IAAiCkB,mBAAmB,EAArD,CAAR;EACD;EACF,GAdD,CAhOuD;EAiPvD;EACA;EACA;;;EACA,MAAM2B,QAAQ,GAAG,SAAXA,QAAW,CAAU9E,CAAV,EAAa;EAC5B,QAAMiB,MAAM,GAAGF,eAAe,CAACf,CAAD,CAA9B;EACAuD,IAAAA,mBAAmB;EAEnB,QAAIwB,eAAe,GAAG,IAAtB;;EAEA,QAAIlD,KAAK,CAACE,cAAN,CAAqB9C,MAArB,GAA8B,CAAlC,EAAqC;EACnC;EACA;EACA;EACA,UAAM+F,cAAc,GAAGzE,SAAS,CAACsB,KAAK,CAACE,cAAP,EAAuB;EAAA,YAAGc,SAAH,QAAGA,SAAH;EAAA,eACrDA,SAAS,CAACC,QAAV,CAAmB7B,MAAnB,CADqD;EAAA,OAAvB,CAAhC;;EAIA,UAAI+D,cAAc,GAAG,CAArB,EAAwB;EACtB;EACA;EACA,YAAIhF,CAAC,CAACiF,QAAN,EAAgB;EACd;EACAF,UAAAA,eAAe,GACblD,KAAK,CAACE,cAAN,CAAqBF,KAAK,CAACE,cAAN,CAAqB9C,MAArB,GAA8B,CAAnD,EACG0E,gBAFL;EAGD,SALD,MAKO;EACL;EACAoB,UAAAA,eAAe,GAAGlD,KAAK,CAACE,cAAN,CAAqB,CAArB,EAAwBuB,iBAA1C;EACD;EACF,OAZD,MAYO,IAAItD,CAAC,CAACiF,QAAN,EAAgB;EACrB;EAEA;EACA,YAAIC,iBAAiB,GAAG3E,SAAS,CAC/BsB,KAAK,CAACE,cADyB,EAE/B;EAAA,cAAGuB,iBAAH,SAAGA,iBAAH;EAAA,iBAA2BrC,MAAM,KAAKqC,iBAAtC;EAAA,SAF+B,CAAjC;;EAKA,YACE4B,iBAAiB,GAAG,CAApB,KACCrD,KAAK,CAACE,cAAN,CAAqBiD,cAArB,EAAqCnC,SAArC,KAAmD5B,MAAnD,IACEsD,oBAAW,CAACtD,MAAD,CAAX,IAAuB,CAACkE,mBAAU,CAAClE,MAAD,CAFrC,CADF,EAIE;EACA;EACA;EACA;EACA;EACA;EACAiE,UAAAA,iBAAiB,GAAGF,cAApB;EACD;;EAED,YAAIE,iBAAiB,IAAI,CAAzB,EAA4B;EAC1B;EACA;EACA;EACA,cAAME,qBAAqB,GACzBF,iBAAiB,KAAK,CAAtB,GACIrD,KAAK,CAACE,cAAN,CAAqB9C,MAArB,GAA8B,CADlC,GAEIiG,iBAAiB,GAAG,CAH1B;EAKA,cAAMG,gBAAgB,GAAGxD,KAAK,CAACE,cAAN,CAAqBqD,qBAArB,CAAzB;EACAL,UAAAA,eAAe,GAAGM,gBAAgB,CAAC1B,gBAAnC;EACD;EACF,OAlCM,MAkCA;EACL;EAEA;EACA,YAAI2B,gBAAgB,GAAG/E,SAAS,CAC9BsB,KAAK,CAACE,cADwB,EAE9B;EAAA,cAAG4B,gBAAH,SAAGA,gBAAH;EAAA,iBAA0B1C,MAAM,KAAK0C,gBAArC;EAAA,SAF8B,CAAhC;;EAKA,YACE2B,gBAAgB,GAAG,CAAnB,KACCzD,KAAK,CAACE,cAAN,CAAqBiD,cAArB,EAAqCnC,SAArC,KAAmD5B,MAAnD,IACEsD,oBAAW,CAACtD,MAAD,CAAX,IAAuB,CAACkE,mBAAU,CAAClE,MAAD,CAFrC,CADF,EAIE;EACA;EACA;EACA;EACA;EACA;EACAqE,UAAAA,gBAAgB,GAAGN,cAAnB;EACD;;EAED,YAAIM,gBAAgB,IAAI,CAAxB,EAA2B;EACzB;EACA;EACA;EACA,cAAMF,sBAAqB,GACzBE,gBAAgB,KAAKzD,KAAK,CAACE,cAAN,CAAqB9C,MAArB,GAA8B,CAAnD,GACI,CADJ,GAEIqG,gBAAgB,GAAG,CAHzB;;EAKA,cAAMD,iBAAgB,GAAGxD,KAAK,CAACE,cAAN,CAAqBqD,sBAArB,CAAzB;EACAL,UAAAA,eAAe,GAAGM,iBAAgB,CAAC/B,iBAAnC;EACD;EACF;EACF,KAzFD,MAyFO;EACL;EACAyB,MAAAA,eAAe,GAAGhC,gBAAgB,CAAC,eAAD,CAAlC;EACD;;EAED,QAAIgC,eAAJ,EAAqB;EACnB/E,MAAAA,CAAC,CAACyE,cAAF;EACAX,MAAAA,QAAQ,CAACiB,eAAD,CAAR;EACD,KAvG2B;;EAyG7B,GAzGD;;EA2GA,MAAMQ,QAAQ,GAAG,SAAXA,QAAW,CAAUvF,CAAV,EAAa;EAC5B,QACED,aAAa,CAACC,CAAD,CAAb,IACAa,cAAc,CAACY,MAAM,CAACE,iBAAR,EAA2B3B,CAA3B,CAAd,KAAgD,KAFlD,EAGE;EACAA,MAAAA,CAAC,CAACyE,cAAF;EACAzF,MAAAA,IAAI,CAACqF,UAAL;EACA;EACD;;EAED,QAAIlE,UAAU,CAACH,CAAD,CAAd,EAAmB;EACjB8E,MAAAA,QAAQ,CAAC9E,CAAD,CAAR;EACA;EACD;EACF,GAdD;;EAgBA,MAAMwF,UAAU,GAAG,SAAbA,UAAa,CAAUxF,CAAV,EAAa;EAC9B,QAAIa,cAAc,CAACY,MAAM,CAAC2C,uBAAR,EAAiCpE,CAAjC,CAAlB,EAAuD;EACrD;EACD;;EAED,QAAMiB,MAAM,GAAGF,eAAe,CAACf,CAAD,CAA9B;;EAEA,QAAI0C,iBAAiB,CAACzB,MAAD,CAArB,EAA+B;EAC7B;EACD;;EAED,QAAIJ,cAAc,CAACY,MAAM,CAAC+C,iBAAR,EAA2BxE,CAA3B,CAAlB,EAAiD;EAC/C;EACD;;EAEDA,IAAAA,CAAC,CAACyE,cAAF;EACAzE,IAAAA,CAAC,CAAC6E,wBAAF;EACD,GAjBD,CA/WuD;EAmYvD;EACA;;;EAEA,MAAMY,YAAY,GAAG,SAAfA,YAAe,GAAY;EAC/B,QAAI,CAAC5D,KAAK,CAACK,MAAX,EAAmB;EACjB;EACD,KAH8B;;;EAM/BrD,IAAAA,gBAAgB,CAACE,YAAjB,CAA8BC,IAA9B,EAN+B;EAS/B;;EACA6C,IAAAA,KAAK,CAACO,sBAAN,GAA+BX,MAAM,CAACG,iBAAP,GAC3BxB,KAAK,CAAC,YAAY;EAChB0D,MAAAA,QAAQ,CAACX,mBAAmB,EAApB,CAAR;EACD,KAFI,CADsB,GAI3BW,QAAQ,CAACX,mBAAmB,EAApB,CAJZ;EAMA5B,IAAAA,GAAG,CAACmE,gBAAJ,CAAqB,SAArB,EAAgChB,YAAhC,EAA8C,IAA9C;EACAnD,IAAAA,GAAG,CAACmE,gBAAJ,CAAqB,WAArB,EAAkCvB,gBAAlC,EAAoD;EAClDwB,MAAAA,OAAO,EAAE,IADyC;EAElDC,MAAAA,OAAO,EAAE;EAFyC,KAApD;EAIArE,IAAAA,GAAG,CAACmE,gBAAJ,CAAqB,YAArB,EAAmCvB,gBAAnC,EAAqD;EACnDwB,MAAAA,OAAO,EAAE,IAD0C;EAEnDC,MAAAA,OAAO,EAAE;EAF0C,KAArD;EAIArE,IAAAA,GAAG,CAACmE,gBAAJ,CAAqB,OAArB,EAA8BF,UAA9B,EAA0C;EACxCG,MAAAA,OAAO,EAAE,IAD+B;EAExCC,MAAAA,OAAO,EAAE;EAF+B,KAA1C;EAIArE,IAAAA,GAAG,CAACmE,gBAAJ,CAAqB,SAArB,EAAgCH,QAAhC,EAA0C;EACxCI,MAAAA,OAAO,EAAE,IAD+B;EAExCC,MAAAA,OAAO,EAAE;EAF+B,KAA1C;EAKA,WAAO5G,IAAP;EACD,GAnCD;;EAqCA,MAAM6G,eAAe,GAAG,SAAlBA,eAAkB,GAAY;EAClC,QAAI,CAAChE,KAAK,CAACK,MAAX,EAAmB;EACjB;EACD;;EAEDX,IAAAA,GAAG,CAACuE,mBAAJ,CAAwB,SAAxB,EAAmCpB,YAAnC,EAAiD,IAAjD;EACAnD,IAAAA,GAAG,CAACuE,mBAAJ,CAAwB,WAAxB,EAAqC3B,gBAArC,EAAuD,IAAvD;EACA5C,IAAAA,GAAG,CAACuE,mBAAJ,CAAwB,YAAxB,EAAsC3B,gBAAtC,EAAwD,IAAxD;EACA5C,IAAAA,GAAG,CAACuE,mBAAJ,CAAwB,OAAxB,EAAiCN,UAAjC,EAA6C,IAA7C;EACAjE,IAAAA,GAAG,CAACuE,mBAAJ,CAAwB,SAAxB,EAAmCP,QAAnC,EAA6C,IAA7C;EAEA,WAAOvG,IAAP;EACD,GAZD,CA3auD;EA0bvD;EACA;;;EAEAA,EAAAA,IAAI,GAAG;EACL+G,IAAAA,QADK,oBACIC,eADJ,EACqB;EACxB,UAAInE,KAAK,CAACK,MAAV,EAAkB;EAChB,eAAO,IAAP;EACD;;EAED,UAAM+D,UAAU,GAAG3D,SAAS,CAAC0D,eAAD,EAAkB,YAAlB,CAA5B;EACA,UAAME,cAAc,GAAG5D,SAAS,CAAC0D,eAAD,EAAkB,gBAAlB,CAAhC;EACA,UAAMG,iBAAiB,GAAG7D,SAAS,CAAC0D,eAAD,EAAkB,mBAAlB,CAAnC;;EAEA,UAAI,CAACG,iBAAL,EAAwB;EACtB5C,QAAAA,mBAAmB;EACpB;;EAED1B,MAAAA,KAAK,CAACK,MAAN,GAAe,IAAf;EACAL,MAAAA,KAAK,CAACM,MAAN,GAAe,KAAf;EACAN,MAAAA,KAAK,CAACG,2BAAN,GAAoCT,GAAG,CAAC6B,aAAxC;;EAEA,UAAI6C,UAAJ,EAAgB;EACdA,QAAAA,UAAU;EACX;;EAED,UAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;EAC7B,YAAID,iBAAJ,EAAuB;EACrB5C,UAAAA,mBAAmB;EACpB;;EACDkC,QAAAA,YAAY;;EACZ,YAAIS,cAAJ,EAAoB;EAClBA,UAAAA,cAAc;EACf;EACF,OARD;;EAUA,UAAIC,iBAAJ,EAAuB;EACrBA,QAAAA,iBAAiB,CAACtE,KAAK,CAACC,UAAN,CAAiBuE,MAAjB,EAAD,CAAjB,CAA6CC,IAA7C,CACEF,gBADF,EAEEA,gBAFF;EAIA,eAAO,IAAP;EACD;;EAEDA,MAAAA,gBAAgB;EAChB,aAAO,IAAP;EACD,KA1CI;EA4CL/B,IAAAA,UA5CK,sBA4CMkC,iBA5CN,EA4CyB;EAC5B,UAAI,CAAC1E,KAAK,CAACK,MAAX,EAAmB;EACjB,eAAO,IAAP;EACD;;EAEDsE,MAAAA,YAAY,CAAC3E,KAAK,CAACO,sBAAP,CAAZ,CAL4B;;EAM5BP,MAAAA,KAAK,CAACO,sBAAN,GAA+BC,SAA/B;EAEAwD,MAAAA,eAAe;EACfhE,MAAAA,KAAK,CAACK,MAAN,GAAe,KAAf;EACAL,MAAAA,KAAK,CAACM,MAAN,GAAe,KAAf;EAEAtD,MAAAA,gBAAgB,CAACW,cAAjB,CAAgCR,IAAhC;EAEA,UAAMyH,YAAY,GAAGnE,SAAS,CAACiE,iBAAD,EAAoB,cAApB,CAA9B;EACA,UAAMG,gBAAgB,GAAGpE,SAAS,CAACiE,iBAAD,EAAoB,kBAApB,CAAlC;EACA,UAAMI,mBAAmB,GAAGrE,SAAS,CACnCiE,iBADmC,EAEnC,qBAFmC,CAArC;;EAKA,UAAIE,YAAJ,EAAkB;EAChBA,QAAAA,YAAY;EACb;;EAED,UAAMnC,WAAW,GAAGhC,SAAS,CAC3BiE,iBAD2B,EAE3B,aAF2B,EAG3B,yBAH2B,CAA7B;;EAMA,UAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;EAC/BxG,QAAAA,KAAK,CAAC,YAAM;EACV,cAAIkE,WAAJ,EAAiB;EACfR,YAAAA,QAAQ,CAACG,kBAAkB,CAACpC,KAAK,CAACG,2BAAP,CAAnB,CAAR;EACD;;EACD,cAAI0E,gBAAJ,EAAsB;EACpBA,YAAAA,gBAAgB;EACjB;EACF,SAPI,CAAL;EAQD,OATD;;EAWA,UAAIpC,WAAW,IAAIqC,mBAAnB,EAAwC;EACtCA,QAAAA,mBAAmB,CACjB1C,kBAAkB,CAACpC,KAAK,CAACG,2BAAP,CADD,CAAnB,CAEEsE,IAFF,CAEOM,kBAFP,EAE2BA,kBAF3B;EAGA,eAAO,IAAP;EACD;;EAEDA,MAAAA,kBAAkB;EAClB,aAAO,IAAP;EACD,KA/FI;EAiGLzH,IAAAA,KAjGK,mBAiGG;EACN,UAAI0C,KAAK,CAACM,MAAN,IAAgB,CAACN,KAAK,CAACK,MAA3B,EAAmC;EACjC,eAAO,IAAP;EACD;;EAEDL,MAAAA,KAAK,CAACM,MAAN,GAAe,IAAf;EACA0D,MAAAA,eAAe;EAEf,aAAO,IAAP;EACD,KA1GI;EA4GLpG,IAAAA,OA5GK,qBA4GK;EACR,UAAI,CAACoC,KAAK,CAACM,MAAP,IAAiB,CAACN,KAAK,CAACK,MAA5B,EAAoC;EAClC,eAAO,IAAP;EACD;;EAEDL,MAAAA,KAAK,CAACM,MAAN,GAAe,KAAf;EACAoB,MAAAA,mBAAmB;EACnBkC,MAAAA,YAAY;EAEZ,aAAO,IAAP;EACD,KAtHI;EAwHLoB,IAAAA,uBAxHK,mCAwHmBC,iBAxHnB,EAwHsC;EACzC,UAAMC,eAAe,GAAG,GAAGV,MAAH,CAAUS,iBAAV,EAA6BlD,MAA7B,CAAoCoD,OAApC,CAAxB;EAEAnF,MAAAA,KAAK,CAACC,UAAN,GAAmBiF,eAAe,CAACvD,GAAhB,CAAoB,UAACb,OAAD;EAAA,eACrC,OAAOA,OAAP,KAAmB,QAAnB,GAA8BpB,GAAG,CAAC2B,aAAJ,CAAkBP,OAAlB,CAA9B,GAA2DA,OADtB;EAAA,OAApB,CAAnB;;EAIA,UAAId,KAAK,CAACK,MAAV,EAAkB;EAChBqB,QAAAA,mBAAmB;EACpB;;EAED,aAAO,IAAP;EACD;EApII,GAAP,CA7buD;;EAqkBvDvE,EAAAA,IAAI,CAAC6H,uBAAL,CAA6BxF,QAA7B;EAEA,SAAOrC,IAAP;EACD;;;;;;;;;;"}